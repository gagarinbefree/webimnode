{"version":3,"sources":["Server.js","VkAuth.js","Friend.js","Friends.js","App.js","serviceWorker.js","index.js"],"names":["Server","username","password","fetch","this","domain","method","body","JSON","stringify","headers","Accept","Content-Type","response","json","userId","VkAuth","_this","react_default","a","createElement","className","tabIndex","role","style","display","ref","nameInput","type","id","aria-describedby","placeholder","autoFocus","passwordInput","onClick","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","login","abrupt","sent","stop","value","user","getUserPhoto","user_id","photo","props","first_name","last_name","logout","React","Component","Friend","_ref","lastName","firstName","online","src","width","height","alt","Friends","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","friends","Fragment","map","item","index","src_Friend","key","photo_50","getFriends","getUserFriends","data","setState","initState","isLogon","App","_this2","src_Friends","src_VkAuth","userName","localStorage","setItem","clear","getItem","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b5e64665.chunk.js","sourcesContent":["class Server {\r\n    static domain = 'https://webimnode.herokuapp.com';\r\n\r\n    static async login(username, password) {\r\n        const response = await fetch(this.domain + '/auth/login', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ username: username, password: password }),\r\n            headers: {\r\n                Accept: 'text/plain',\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        });\r\n        \r\n        return await response.json();  \r\n    }\r\n\r\n    static async getUserPhoto(userId) {\r\n        const response = await fetch(this.domain + '/users/' + userId + '/photo', {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'text/plain',\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        });\r\n        \r\n        return await response.json(); \r\n    }\r\n\r\n    static async getUserFriends(userId) {\r\n        const response = await fetch(this.domain + '/users/' + userId + '/friends/5', {\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: 'text/plain',\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        });\r\n        \r\n        return await response.json();\r\n    }\r\n}\r\n\r\nexport default Server;","import React from 'react';\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'bootstrap/dist/js/bootstrap.min.js'\r\nimport Server from './Server';\r\n\r\nclass VkAuth extends React.Component {  \r\n    render() {\r\n        return <div className=\"modal fade show\" tabIndex=\"-1\" role=\"dialog\" style={{ display: 'block' }}>\r\n            <div className=\"modal-dialog modal-sm\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header alert-primary\">\r\n                        <h6 className=\"modal-title\">Войти с помощью ВКонтакте</h6>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <input ref={(nameInput) => { this.nameInput = nameInput }} type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Телефон или email\" autoFocus />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input ref={(passwordInput) => { this.passwordInput = passwordInput }} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Пароль\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={async () => await this.login()}>Войти</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    async login() {        \r\n        try\r\n        {\r\n            let username = this.nameInput.value;\r\n            let password = this.passwordInput.value;\r\n\r\n            let user = await Server.login(username, password);\r\n            let photo = await Server.getUserPhoto(user.user_id);\r\n\r\n            this.props.login(username, user.user_id, user.first_name, user.last_name, photo.photo);\r\n        }\r\n        catch(e) {            \r\n            this.props.logout();\r\n        }\r\n    }\r\n}\r\n\r\nexport default VkAuth;","import React from 'react';\r\n\r\nconst Friend = ({id, lastName, firstName, photo, online}) => {\r\n    return <div className=\"row mt-3\" id={id}>\r\n        <img src={photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top rounded-circle\" alt=\"\" />\r\n        <span className=\"ml-3\">{firstName + \" \" + lastName}</span>\r\n        {online === 1 ? <span className=\"ml-3 text-success\">online</span> : null}\r\n    </div>\r\n};\r\n\r\nexport default Friend;","import React from 'react';\r\nimport Friend from './Friend';\r\nimport Server from './Server';\r\n\r\nclass Friends extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {userId: props.userId, friends: []}\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.state.friends.map((item, index) => {\r\n                    return <Friend key={item.id} \r\n                        id={item.id} \r\n                        firstName={item.first_name} \r\n                        lastName={item.last_name} \r\n                        online={item.online} \r\n                        photo={item.photo_50}\r\n                    />\r\n                })\r\n            }\r\n        </React.Fragment>\r\n    }    \r\n\r\n    async componentDidMount() {\r\n        await this.getFriends();\r\n    }\r\n\r\n    async getFriends() {        \r\n        let data = await Server.getUserFriends(this.state.userId);\r\n\r\n        this.setState({friends: data.friends});\r\n    }\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport './App.css';\r\nimport VkAuth from './VkAuth'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Friends from './Friends';\r\n\r\nconst initState = {\r\n    isLogon: false,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userId: \"\",\r\n    photo: \"\"\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        //localStorage.clear();       \r\n        this.state = initState;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLogon) {\r\n            return <React.Fragment>\r\n                <nav className=\"navbar navbar-dark bg-primary\">\r\n                    <div className=\"navbar-brand\">\r\n                        <img src={this.state.photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top rounded-circle\" alt=\"\"></img>\r\n                        <strong className=\"ml-3\">{this.state.firstName + \" \" + this.state.lastName}</strong>\r\n                    </div>\r\n                    <div className=\"navbar-right cursor-pointer\" onClick={() => this.logout()}>\r\n                        <span className=\"font-weight-light text-light\">Выход</span>\r\n                    </div>\r\n                </nav>\r\n                <div className=\"d-flex align-items-center justify-content-center h-100 mt-3\">\r\n                    <div className=\"d-flex flex-column\">\r\n                        <Friends userId={this.state.userId} />                        \r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        }\r\n        else {\r\n            return <React.Fragment>\r\n                <VkAuth login={(userName, userId, firstName, lastName, photo) => this.login(userName, userId, firstName, lastName, photo)} logout={() => this.logout()}/>\r\n            </React.Fragment>\r\n        }\r\n    }    \r\n\r\n    login(userName, userId, firstName, lastName, photo) {\r\n        localStorage.setItem('user_id', userId);\r\n        localStorage.setItem('user_name', userName);\r\n        localStorage.setItem('first_name', firstName);\r\n        localStorage.setItem('last_name', lastName);\r\n        localStorage.setItem('photo', photo);\r\n        this.setState({\r\n            isLogon: true,\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            userId: userId,\r\n            photo: photo\r\n        });        \r\n    }\r\n\r\n    logout() {\r\n        localStorage.clear();\r\n        this.setState(initState);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let userId = localStorage.getItem('user_id');\r\n        if (userId != null) {\r\n            this.setState({\r\n                isLogon: true,\r\n                firstName: localStorage.getItem('first_name'),\r\n                lastName: localStorage.getItem('last_name'),\r\n                userId: userId,\r\n                photo:  localStorage.getItem('photo')\r\n            });\r\n        }\r\n        else\r\n            this.setState(initState);\r\n    }    \r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}